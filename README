# requested features:
		
	* browse through the comics,
	* see the comic details, including its description,
	* search for comics by the comic number as well as text,
	* get the comic explanation
	* favorite the comics, which would be available offline too,
	* send comics to others,
	* get notifications when a new comic is published,
	* support multiple form factors.


# bare-minimum MVP should have: 

	* browse through comics
	* comic details
	* support multiple form factors

# first thoughts:

	* most features could apply to any comic, not just xkcd. Can we make a generic app that just happens to consume xkcd?
	* should have simple UI (fullscreen pagination?)
	* xkcd API is simple json but 'search' and 'explanation' will require some investigation on how to consume 
	* MVP should be absolutely limited to above features and released as-is, any more features or improvements will go in the next version if time allows.


..............

### Day 1 complete:
	* Rough MVP app that is able to browse through a list and open a comic. Started with UIPageViewController as the main UI, which worked ok but didn't have much customization options. Been using Storyboards to quickly prototype UIs, though they will probably have to be replaced with code eventually (tech debt+1)
	* ViewControllers so far know nothing about XKCD thanks to protocols. Just need to figure out how to dependency inject or configure app to use xkcd concretely outside of the view controller while using storyboards...
	* Lots of cleanup in the code awaits. 
	* Tests...

### Day 2: 
	* cleaned the code up a bit
	* ended up using the paging view for the comic detail 
	* showing comic details on a flip of the comic view screen (tap to flip)
	* dependencies are injected from the app delegate
	* made sure view work in all devices/orientations
	* decided to add search functionality as it seemed most interesting. if time allowed I'd go for favoriting next
	* added some mocks and tests, though having a hard time figuring out what to test exactly
